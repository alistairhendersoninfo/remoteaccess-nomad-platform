{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Remote Access Platform Documentation","text":"<p>Welcome to the Remote Access Platform documentation. Test trigger Fri Jun 27 11:15:33 AM BST 2025 Second test trigger Fri Jun 27 11:23:51 AM BST 2025</p> <p>Material theme test [current date/time]</p> <p>Third test trigger [current date/time]</p> <p>Fourth test trigger [current date/time]</p>"},{"location":"bootstrap/","title":"Bootstrap Installation","text":""},{"location":"bootstrap/#overview","title":"Overview","text":"<p>This bootstrap script prepares a fresh system for RemoteAccess.Ninja deployment. It installs all required base packages and sets up the menu system.</p>"},{"location":"bootstrap/#script","title":"Script","text":"<p>Path: <code>bootstrap_install.sh</code></p>"},{"location":"bootstrap/#purpose","title":"Purpose","text":"<ul> <li>Install prerequisites: whiptail, sqlite3, containerd</li> <li>Enable containerd for container runtime support</li> <li>Create working directories</li> <li>Copy menu system script to <code>/usr/local/bin/ninjamenu</code> for global access</li> <li>Run virgin install check</li> </ul>"},{"location":"bootstrap/#usage","title":"Usage","text":"<p>From project root:</p> <p>```bash ./bootstrap_install.sh Outputs Menu available via ninjamenu</p> <p>Logs stored in /var/log/remoteaccess.nija/bootstrap_install.log</p> <p>Execution recorded in SQLite scripts table</p> <p>Next Steps Run:ninjamenu to begin using the menu-driven deployment system.</p>"},{"location":"hardening/","title":"Hardening Modules","text":""},{"location":"hardening/#overview","title":"Overview","text":"<p>These scripts implement essential Linux hardening to secure the RemoteAccess.Ninja platform base operating system.</p>"},{"location":"hardening/#available-modules","title":"Available modules","text":"<ul> <li>Virgin install check</li> <li>Update &amp; upgrade system</li> <li>Disable root SSH login</li> <li>Configure UFW firewall</li> <li>Install Fail2ban</li> <li>Check SELinux status</li> <li>Harden SSH configuration</li> <li>User account audit</li> <li>Create ninjaadmin user</li> </ul> <p>Each module is documented individually for clarity and operational audit.</p>"},{"location":"hardening/#usage","title":"Usage","text":"<p>Run via <code>ninjamenu</code> or manually from <code>scripts/hardening/</code>.</p>"},{"location":"modules/","title":"Deployment Modules","text":""},{"location":"modules/#overview","title":"Overview","text":"<p>Deployment modules install and configure the main platform components, including:</p> <ul> <li>Vault (as Nomad job)</li> <li>PostgreSQL</li> <li>MinIO</li> <li>Traefik</li> <li>Kasm Workspaces</li> </ul> <p>Each module is fully automated, logs its execution, and records status in the compliance SQLite database.</p>"},{"location":"modules/#usage","title":"Usage","text":"<p>Run via <code>ninjamenu</code> or execute scripts directly as needed during build phases.</p>"},{"location":"overview/","title":"RemoteAccess.Ninja Platform","text":"<p>RemoteAccess.Ninja is a fully self-hosted secure remote access and reporting platform. It leverages Nomad, Vault, PostgreSQL, and MinIO to deliver enterprise-grade infrastructure without SaaS lock-in.</p>"},{"location":"overview/#project-vision","title":"Project Vision","text":"<ul> <li>Fully auditable and automated installation</li> <li>Hardened by default with strong operational security</li> <li>Modular deployment architecture for scalability and clarity</li> </ul>"},{"location":"overview/#contents","title":"Contents","text":"<ul> <li>Bootstrap Installation</li> <li>Preflight Checks</li> <li>Hardening Modules</li> <li>Deployment Modules</li> </ul>"},{"location":"preflight/","title":"Preflight Checks","text":""},{"location":"preflight/#overview","title":"Overview","text":"<p>The preflight disk and system resource check ensures your server meets minimum requirements before deploying core modules.</p>"},{"location":"preflight/#script","title":"Script","text":"<p>Path: <code>scripts/modules/preflight_disk_check.sh</code></p>"},{"location":"preflight/#purpose","title":"Purpose","text":"<ul> <li>Verify OS disk has minimum 12GB</li> <li>Verify additional disks for:</li> <li>/opt/nomad (20GB)</li> <li>/opt/databases (50GB)</li> <li>/opt/minio (100GB)</li> <li>Check CPU cores (minimum 2)</li> <li>Check RAM (minimum 4GB)</li> </ul>"},{"location":"preflight/#usage","title":"Usage","text":"<p>Run via ninjamenu or manually:</p> <p>```bash scripts/modules/preflight_disk_check.sh tee books/docs/preflight/README.md &lt;&lt;'EOF'</p>"},{"location":"preflight/#preflight-checks_1","title":"Preflight Checks","text":""},{"location":"preflight/#overview_1","title":"Overview","text":"<p>The preflight disk and system resource check ensures your server meets minimum requirements before deploying core modules.</p>"},{"location":"preflight/#script_1","title":"Script","text":"<p>Path: <code>scripts/modules/preflight_disk_check.sh</code></p>"},{"location":"preflight/#purpose_1","title":"Purpose","text":"<ul> <li>Verify OS disk has minimum 12GB</li> <li>Verify additional disks for:</li> <li>/opt/nomad (20GB)</li> <li>/opt/databases (50GB)</li> <li>/opt/minio (100GB)</li> <li>Check CPU cores (minimum 2)</li> <li>Check RAM (minimum 4GB)</li> </ul>"},{"location":"preflight/#usage_1","title":"Usage","text":"<p>Run via ninjamenu or manually:</p> <p>```bash scripts/modules/preflight_disk_check.sh Outputs Displays check results for each requirement</p> <p>Exits with error if any requirement is not met</p> <p>Logs stored in /var/log/remoteaccess.nija/preflight_disk_check.log</p> <p>Importance Preflight validation ensures smooth deployment by verifying hardware readiness before installation of Nomad and critical services.</p>"}]}